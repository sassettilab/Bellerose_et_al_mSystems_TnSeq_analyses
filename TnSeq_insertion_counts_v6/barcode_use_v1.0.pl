# programs uses data in sample_details.txt file generated by barcodes_v1.2.pl
# to summarize barcode use
#
# elaboration of the v0 code
#
use strict;
die "usage: barcode_use.pl <input _details.txt file>\n"
	unless (@ARGV == 1);
open IN, "$ARGV[0]"
	or die "Can't open input file ($!) \n";
my $outfile = $ARGV[0];
unless ($outfile =~ s/\.txt$//) {
	$outfile = 'output';
}
<IN>; <IN>; <IN>; # ignore header
my %barcodes;
my (%p1, %p2, %p3, %p4, %p5, %p6, %p7, %p8, %p9); # G,A,T,C counts at each position
my @hash_refs = (\%p1, \%p2, \%p3, \%p4, \%p5, \%p6, \%p7, \%p8, \%p9);
my $template_count;
print "reading barcodes...\n";
while (<IN>) {
	my @line = split /\t/, $_;
	my @nucs = split //, $line[3];
	$template_count++;
	#loop through each %pN hash, over each nucleotide
	foreach my $index (0..8) {
		${$hash_refs[$index]}{$nucs[$index]}++; #first array, first nucleotide, etc.
	}
	$barcodes{$line[3]}++;
}
close IN;
# calculate overall nucleotide use and find top 10 barcodes
my ($G, $A, $T, $C);
foreach (@hash_refs[0..1], @hash_refs[3..4], @hash_refs[6..8]) {
	$G += ${$_}{'G'};
	$A += ${$_}{'A'};
	$T += ${$_}{'T'};
	$C += ${$_}{'C'};
}
my $tot_nucs = $G + $A + $T + $C; # includes p3, p6!
unless ($tot_nucs = $template_count * 9) { # bookkeeping
	die "\$tot_nucs = ", $tot_nucs, "\t templates * 9 = ", $template_count * 9, "\n";
}
$tot_nucs = $tot_nucs - (2 * $template_count); # removes counts at p3, p6
my @values_sort = sort {$barcodes{$b} <=> $barcodes{$a}} keys %barcodes;
# report summary
print "\n############### barcode use summary ###############\n";
print "$template_count total templates\n";
print scalar (keys %barcodes), " barcodes used\n";
printf "mean use = %.1f templates / barcode\n", $template_count / scalar (keys %barcodes);
print "\nnucleotide use by position:\n";
print "\tG\tA\tT\tC\n";
printf "p1\t%.2f\t%.2f\t%.2f\t%.2f\n", $p1{'G'} / $template_count, $p1{'A'} / $template_count,$p1{'T'} / $template_count,$p1{'C'} / $template_count;
printf "p2\t%.2f\t%.2f\t%.2f\t%.2f\n", $p2{'G'} / $template_count, $p2{'A'} / $template_count,$p2{'T'} / $template_count,$p2{'C'} / $template_count;
printf "p3\t%.2f\t%.2f\t%.2f\t%.2f\n", $p3{'G'} / $template_count, $p3{'A'} / $template_count,$p3{'T'} / $template_count,$p3{'C'} / $template_count;
printf "p4\t%.2f\t%.2f\t%.2f\t%.2f\n", $p4{'G'} / $template_count, $p4{'A'} / $template_count,$p4{'T'} / $template_count,$p4{'C'} / $template_count;
printf "p5\t%.2f\t%.2f\t%.2f\t%.2f\n", $p5{'G'} / $template_count, $p5{'A'} / $template_count,$p5{'T'} / $template_count,$p5{'C'} / $template_count;
printf "p6\t%.2f\t%.2f\t%.2f\t%.2f\n", $p6{'G'} / $template_count, $p6{'A'} / $template_count,$p6{'T'} / $template_count,$p6{'C'} / $template_count;
printf "p7\t%.2f\t%.2f\t%.2f\t%.2f\n", $p7{'G'} / $template_count, $p7{'A'} / $template_count,$p7{'T'} / $template_count,$p7{'C'} / $template_count;
printf "p8\t%.2f\t%.2f\t%.2f\t%.2f\n", $p8{'G'} / $template_count, $p8{'A'} / $template_count,$p8{'T'} / $template_count,$p8{'C'} / $template_count;
printf "p9\t%.2f\t%.2f\t%.2f\t%.2f\n", $p9{'G'} / $template_count, $p9{'A'} / $template_count,$p9{'T'} / $template_count,$p9{'C'} / $template_count;
print "\noverall nucleotide use (ignore p3, p6):\n";
printf "G\t%.2f\nA\t%.2f\nT\t%.2f\nC\t%.2f\n", $G / $tot_nucs, $A / $tot_nucs, $T / $tot_nucs, $C / $tot_nucs;
print "\ntop 10 barcodes:\n";
foreach (@values_sort[0..9]) {
	print "$_\t$barcodes{$_}\n";
}
print "\###################################################\n";
# output the complete data to file 
open OUT, ">$outfile\_barcode_use.txt";
foreach (@values_sort) {
	print OUT "$_\t$barcodes{$_}\n";
}
close OUT;
print "complete counts in $outfile\_barcode_use.txt\n";
